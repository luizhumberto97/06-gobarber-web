{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/06-gobarber-web/src/hooks/toast.tsx\";\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport ToastContainer from '../components/ToastContainer';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const [messages, setMessages] = useState([]);\n  const addToast = useCallback(({\n    type,\n    title,\n    description\n  }) => {\n    const id = uuid();\n    const toast = {\n      id,\n      type,\n      title,\n      description\n    };\n    setMessages(state => [...state, toast]);\n  }, []);\n  const removeToast = useCallback(() => {\n    // Quero apenas as msgs em que o id for diferente do que eu quero remover\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ToastContainer, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a Toast Provider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/luiz/estudos/06-gobarber-web/src/hooks/toast.tsx"],"names":["React","createContext","useCallback","useContext","useState","uuid","ToastContainer","ToastContext","ToastProvider","children","messages","setMessages","addToast","type","title","description","id","toast","state","removeToast","filter","message","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAuE,OAAvE;AACA,SAAQC,IAAR,QAAmB,QAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAcA,MAAMC,YAAY,GAAGN,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMO,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAiB,EAAjB,CAAxC;AAEA,QAAMQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;AAACW,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAD,KAA0D;AACrF,UAAMC,EAAE,GAAGX,IAAI,EAAf;AACA,UAAMY,KAAK,GAAG;AACZD,MAAAA,EADY;AAEZH,MAAAA,IAFY;AAGZC,MAAAA,KAHY;AAIZC,MAAAA;AAJY,KAAd;AAOAJ,IAAAA,WAAW,CAAEO,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAWD,KAAX,CAAZ,CAAX;AACD,GAV2B,EAW5B,EAX4B,CAA5B;AAcA,QAAME,WAAW,GAAGjB,WAAW,CAAC,MAAM;AACpC;AACDS,IAAAA,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACE,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACL,EAAR,KAAeA,EAAvC,CAAZ,CAAX;AACA,GAH8B,EAG5B,EAH4B,CAA/B;AAOA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACJ,MAAAA,QAAD;AAAWO,MAAAA;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,QADH,eAEE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA9BD;;AAgCA,SAASY,QAAT,GAAqC;AACnC,QAAMC,OAAO,GAAGpB,UAAU,CAACI,YAAD,CAA1B;;AAEA,MAAG,CAACgB,OAAJ,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD;;AAED,SAAQf,aAAR,EAAuBc,QAAvB","sourcesContent":["import React, {createContext , useCallback, useContext, useState} from 'react';\nimport {uuid} from 'uuidv4'\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage{\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData{\n  addToast(message: Omit<ToastMessage, 'id'>):void;\n  removeToast(): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(({type, title, description}: Omit<ToastMessage, 'id'>) => {\n    const id = uuid();\n    const toast = {\n      id,\n      type,\n      title,\n      description,\n    };\n\n    setMessages((state) => [...state, toast]);\n  },\n  [],\n);\n\n  const removeToast = useCallback(() => {\n    // Quero apenas as msgs em que o id for diferente do que eu quero remover\n   setMessages((state) => state.filter(message => message.id !== id))\n  }, []);\n\n\n\n  return (\n    <ToastContext.Provider value={{addToast, removeToast}}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n}\n\nfunction useToast(): ToastContextData{\n  const context = useContext(ToastContext);\n\n  if(!context){\n    throw new Error('useToast must be used within a Toast Provider');\n  }\n\n  return context;\n}\n\nexport {ToastProvider, useToast};\n\n"]},"metadata":{},"sourceType":"module"}