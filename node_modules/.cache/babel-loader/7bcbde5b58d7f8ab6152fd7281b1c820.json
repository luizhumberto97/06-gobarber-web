{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi';\nimport { useToast } from '../../../hooks/toast';\nimport { Container } from './styles';\n\nconst Toast = ({\n  message\n}) => {\n  const {\n    removeToast\n  } = useToast(); // Efect do Toast\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    type: message.type,\n    hasDescription: !!message.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, message.title), message.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }\n  }, message.description)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeToast(message.id),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/home/luiz/estudos/06-gobarber-web/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","useToast","Container","Toast","message","removeToast","timer","setTimeout","id","clearTimeout","type","description","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,aAAT,EAAwBC,SAAxB,QAAwC,gBAAxC;AAEA,SAAuBC,QAAvB,QAAsC,sBAAtC;AAEA,SAAQC,SAAR,QAAwB,UAAxB;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAGC,EAAAA;AAAH,CAAD,KAAkB;AACpD,QAAM;AAACC,IAAAA;AAAD,MAAgBJ,QAAQ,EAA9B,CADoD,CAEpD;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,WAAW,CAACD,OAAO,CAACI,EAAT,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAFD;AAID,GATQ,EASN,CAACD,WAAD,EAAcD,OAAO,CAACI,EAAtB,CATM,CAAT;AAWA,sBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEJ,OAAO,CAACM,IAAzB;AAA+B,IAAA,cAAc,EAAE,CAAC,CAACN,OAAO,CAACO,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,OAAO,CAACQ,KAAjB,CADF,EAEIR,OAAO,CAACO,WAAR,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,OAAO,CAACO,WAAZ,CAF3B,CAJF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMN,WAAW,CAACD,OAAO,CAACI,EAAT,CAAlC;AAAgD,IAAA,IAAI,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADJ;AAgBD,CA9BD;;AAgCA,eAAeL,KAAf","sourcesContent":["import React, {useEffect} from 'react';\n\nimport { FiAlertCircle, FiXCircle} from 'react-icons/fi';\n\nimport {ToastMessage , useToast} from '../../../hooks/toast';\n\nimport {Container} from './styles';\n\ninterface ToastProps{\n  message: ToastMessage;\n}\n\nconst Toast: React.FC<ToastProps> = ({  message }) => {\n  const {removeToast} = useToast();\n  // Efect do Toast\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    }\n\n  }, [removeToast, message.id]);\n\n  return (\n      <Container type={message.type} hasDescription={!!message.description}>\n\n        <FiAlertCircle size={20} />\n\n        <div>\n          <strong>{message.title}</strong>\n           {message.description && <p>{message.description}</p>}\n        </div>\n\n        <button onClick={() => removeToast(message.id)} type=\"button\">\n          <FiXCircle size={18} />\n        </button>\n      </Container>\n\n  );\n}\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}