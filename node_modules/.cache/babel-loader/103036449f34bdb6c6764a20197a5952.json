{"ast":null,"code":"var _jsxFileName = \"/home/luiz/estudos/06-gobarber-web/src/hooks/toast.tsx\";\nimport React, { createContext, useCallback, useContext } from 'react';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const addToast = useCallback(() => {\n    console.log('addToast');\n  }, []);\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a Toast Provider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/luiz/estudos/06-gobarber-web/src/hooks/toast.tsx"],"names":["React","createContext","useCallback","useContext","ToastContext","ToastProvider","children","addToast","console","log","removeToast","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,WAA/B,EAA4CC,UAA5C,QAA6D,OAA7D;AAOA,MAAMC,YAAY,GAAGH,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMI,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,QAAQ,GAAGL,WAAW,CAAC,MAAM;AACjCM,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,QAAMC,WAAW,GAAGR,WAAW,CAAC,MAAM;AACpCM,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAMA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACF,MAAAA,QAAD;AAAWG,MAAAA;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD,CAhBD;;AAkBA,SAASK,QAAT,GAAqC;AACnC,QAAMC,OAAO,GAAGT,UAAU,CAACC,YAAD,CAA1B;;AAEA,MAAG,CAACQ,OAAJ,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD;;AAED,SAAQP,aAAR,EAAuBM,QAAvB","sourcesContent":["import React, {createContext , useCallback, useContext} from 'react';\n\ninterface ToastContextData{\n  addToast(): void;\n  removeToast(): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const addToast = useCallback(() => {\n    console.log('addToast');\n  }, []);\n\n  const removeToast = useCallback(() => {\n    console.log('removeToast');\n  }, []);\n\n\n\n  return (\n    <ToastContext.Provider value={{addToast, removeToast}}>\n      {children}\n    </ToastContext.Provider>\n  );\n}\n\nfunction useToast(): ToastContextData{\n  const context = useContext(ToastContext);\n\n  if(!context){\n    throw new Error('useToast must be used within a Toast Provider');\n  }\n\n  return context;\n}\n\nexport {ToastProvider, useToast};\n\n"]},"metadata":{},"sourceType":"module"}